name: PR Validation
on:
  pull_request:
    types: [opened, synchronize, ready_for_review, reopened]
    branches: [tst, prd]

permissions:
  contents: read
  pull-requests: read

jobs:
  validate-pr:
    name: validate-pr
    runs-on: ubuntu-latest
    outputs:
      status: ${{ steps.set-status.outputs.status }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Validate required repository variables and secrets
        run: |
          echo "🔍 Checking required repository variables..."
          
          MISSING_VARS=()
          
          if [[ -z "${{ vars.EDB_ID }}" ]]; then
            MISSING_VARS+=("EDB_ID in variable")
          else
            echo "✅ EDB_ID: Found"
          fi
          
          if [[ -z "${{ vars.PLATFORM_APPROVER_1 }}" ]]; then
            MISSING_VARS+=("PLATFORM_APPROVER_1 in variable")
          else
            echo "✅ PLATFORM_APPROVER_1: Found"
          fi
          
          if [[ -z "${{ vars.PLATFORM_APPROVER_2 }}" ]]; then
            MISSING_VARS+=("PLATFORM_APPROVER_2 in variable")
          else
            echo "✅ PLATFORM_APPROVER_2: Found"
          fi
          
          if [[ -z "${{ secrets.HARNESS_WEBHOOK_URL }}" ]]; then
            MISSING_VARS+=("HARNESS_WEBHOOK_URL in secret")
          else
            echo "✅ HARNESS_WEBHOOK_URL: Found"
          fi
          
          if [[ ${#MISSING_VARS[@]} -gt 0 ]]; then
            echo "❌ Missing required repository secret/variables:"
            for var in "${MISSING_VARS[@]}"; do
              echo "  - $var"
            done
            exit 1
          fi
          
          echo "✅ All required repository secrets/variables are configured"
      
      - name: Enforce allowed branch flow (dev→tst, tst→prd)
        run: |
          SRC="${{ github.head_ref }}"
          DST="${{ github.base_ref }}"
          case "${SRC}:${DST}" in
            dev:tst|tst:prd)  echo "✅ branch flow allowed" ;;
            *)                   echo "❌ invalid branch flow ${SRC} → ${DST}"; exit 1 ;;
          esac
          
      - name: Check that a CODEOWNERS file exists
        run: |
          if [[ -f .github/CODEOWNERS || -f CODEOWNERS || -f docs/CODEOWNERS ]]; then
            echo "✅ CODEOWNERS file found"
          else
            echo "❌ No CODEOWNERS file found"; exit 1
          fi
          
      - name: Set job status
        id: set-status
        if: always()
        run: |
          if [[ "${{ job.status }}" == "success" ]]; then
            echo "status=success" >> $GITHUB_OUTPUT
          else
            echo "status=failure" >> $GITHUB_OUTPUT
          fi
